"use strict";function shippingMethodsContext(n,t,i,r,u,f){function l(i){return n.$broadcast("shippingMethodsContextChanging",{newShippingMethodSelected:i}),r.updateShippingMethod(i).then(function(){n.$broadcast("shippingMethodsContextChanged",{newShippingMethodSelected:i,oldShippingMethodSelected:h})},function(i){return e=o.getLastState(),n.$broadcast("shippingMethodsContextChanged"),t.reject(i)})}function s(i,u){setTimeout(function(){return u||(u=$('select[name="shippingCountry"]').val()),n.$broadcast("shippingMethodsContextChanging",{initialLoad:i}),r.getShippingMethods(u).then(function(t){if(angular.isDefined(e)||(e={}),angular.isDefined(e.shippingMethods)||(e.shippingMethods=[]),e.shippingMethods=t.data.shippingMethods,e.warnings=t.data.warnings,e.selectedShippingMethod={},e.shippingMethods.length>0){var r=$.grep(e.shippingMethods,function(n){return n.selected});r.length>0&&(e.selectedShippingMethod=r[0])}o.setState(e);n.$broadcast("shippingMethodsContextChanged",{initialLoad:i})},function(i){return e=o.getLastState(),n.$broadcast("shippingMethodsContextChanged"),t.reject(i)})})}function a(){return e}function v(n){n.name!=e.name&&(h=e.selectedShippingMethod,angular.forEach(e.shippingMethods,function(t){t.name==n.name&&(e.selectedShippingMethod=t)}),l(n))}var c={load:s,get:a,set:v},h,e,o=f.instance();return n.$on("resetShippingMethodsData",function(n,t){e=undefined;t&&t.newCountryId?s(!1,t.newCountryId):s()}),c}angular.module("realOnePageCheckout.shippingMethods").factory("shippingMethodsContext",shippingMethodsContext);shippingMethodsContext.$inject=["$rootScope","$q","api","shippingMethodsService","objectUtility","stateHolder"];