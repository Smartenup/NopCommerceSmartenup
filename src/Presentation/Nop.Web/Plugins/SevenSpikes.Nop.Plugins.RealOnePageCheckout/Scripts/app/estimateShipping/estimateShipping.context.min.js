"use strict";function estimateShippingContext(n,t,i,r,u){function o(t){return n.$broadcast("estimateShippingContextChanging",{countryId:t}),r.getStatesByCountryId(t).then(function(t){f.availableStates=u.prepareStatesModel(t.data);n.$broadcast("estimateShippingContextChanged")})}function s(t){return n.$broadcast("estimateShippingContextChanging",{initialLoad:t}),r.getEstimateShipping().then(function(i){f=i.data;f.selectedEstimateShippingCountry={};f.selectedStateProvince={};n.$broadcast("estimateShippingContextChanged",{initialLoad:t})})}function h(){return f}function c(t){var u,i;n.$broadcast("estimateShippingContextChanging");u=f;t.country.value!=u.selectedEstimateShippingCountry.value&&(o(t.country.value),angular.copy(t.country,f.selectedEstimateShippingCountry),f.isButtonEnabled=t.country.value!=0);t.stateProvince.value!=u.selectedStateProvince.value&&angular.copy(t.stateProvince,f.selectedStateProvince);t.zipPostalCode!=u.zipPostalCode&&(f.selectedEstimateShippingZipPostalCode=t.zipPostalCode);t.estimateShipping&&(i={},i.countryId=t.country.value,t.stateProvince&&(i.stateProvinceId=t.stateProvince.value),t.zipPostalCode&&(i.zipPostalCode=t.zipPostalCode),r.calculateEstimateShipping(i).then(function(t){angular.copy(t.data.shippingOptions,f.shippingOptions);angular.copy(t.data.warnings,f.warnings);n.$broadcast("estimateShippingContextChanged")}))}var e={load:s,get:h,set:c},f;return e}angular.module("realOnePageCheckout.estimateShipping").factory("estimateShippingContext",estimateShippingContext);estimateShippingContext.$inject=["$rootScope","$q","api","estimateShippingService","objectUtility"];