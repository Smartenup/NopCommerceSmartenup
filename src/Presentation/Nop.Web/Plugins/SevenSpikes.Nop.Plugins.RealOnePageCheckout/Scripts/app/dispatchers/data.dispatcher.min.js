function dataDispatcher(n, t, i) {
    function f() {
        n.$broadcast("refresh")
    }
    function o() {
        u.pop();
        u.length == 0 && (n.$broadcast("getConfiguration"),
        n.$broadcast("hideConfirmOrderOverlay"),
        $.event.trigger("nopOnePageCheckoutPanelsLoadedEvent"))
    }
    function s(t) {
        e.pop(t);
        e.length === 0 && n.$broadcast("resetOrderTotalData")
    }
    function tt() {
        if (h.length > 0) {
            var n = h.pop();
            n()
        }
    }
    function it() {
        if (c.length > 0) {
            var n = c.pop();
            n()
        }
    }
    function v(n) {
        var u = !1, i, t;
        if (r && r.addressTypeOnWhichTheTaxIsBasedOn == "BillingAddress" && r.ajaxUpdateOrderTotalBasedOnTaxAddressOnAddressFieldsChange.length > 0) {
            if (n.newVatNumber != undefined)
                return !0;
            for (i = r.ajaxUpdateOrderTotalBasedOnTaxAddressOnAddressFieldsChange,
            t = 0; t < i.length; t++)
                if (n.hasOwnProperty("new" + i[t])) {
                    u = !0;
                    break
                }
        }
        return u
    }
    function y(n) {
        var u = !1, i, t;
        if (r && r.ajaxUpdatePaymentMethodsOnAddressFieldsUpdate.length > 0)
            for (i = r.ajaxUpdatePaymentMethodsOnAddressFieldsUpdate,
            t = 0; t < i.length; t++)
                if (n.hasOwnProperty("new" + i[t])) {
                    u = !0;
                    break
                }
        return u
    }
    function p(n) {
        return n.initialLoad || r && r.ajaxUpdateOrderTotalOnPaymentMethodsUpdate
    }
    function w(n) {
        return n.useMyRewardPoints != undefined
    }
    function b(n) {
        return Boolean(n.initialLoad || n.isMyRewardPointsChecked || n.useMyRewardPoints != undefined || n.error)
    }
    function k(n) {
        var u = !1, i, t;
        if (r && r.addressTypeOnWhichTheTaxIsBasedOn == "ShippingAddress" && r.ajaxUpdateOrderTotalBasedOnTaxAddressOnAddressFieldsChange.length > 0)
            for (i = r.ajaxUpdateOrderTotalBasedOnTaxAddressOnAddressFieldsChange,
            t = 0; t < i.length; t++)
                if (n.hasOwnProperty("new" + i[t])) {
                    u = !0;
                    break
                }
        return u
    }
    function d(n) {
        var u = !1, i, t;
        if (r && r.ajaxUpdateShippingMethodsOnAddressFieldsUpdate.length > 0)
            for (i = r.ajaxUpdateShippingMethodsOnAddressFieldsUpdate,
            t = 0; t < i.length; t++)
                if (n.hasOwnProperty("new" + i[t])) {
                    u = !0;
                    break
                }
        return u
    }
    function g(n) {
        return n.initialLoad || r && r.ajaxUpdateOrderTotalOnShippingMethodsUpdate
    }
    function nt(n) {
        return n.initialLoad || n.hasPriceAdjustment
    }
    function rt(n) {
        return n.hasPriceAdjustment
    }
    function ut(n) {
        if (n.newShippingMethodSelected && n.oldShippingMethodSelected) {
            var t = n.newShippingMethodSelected.shippingOption.rate - n.oldShippingMethodSelected.shippingOption.rate;
            if (t !== 0)
                return !0
        }
        return !1
    }
    var r, e = i, u = [], h = [], c = [], l = !1, a = !1;
    return n.$on("configurationReady", function(n, t) {
        r = t
    }),
    n.$on("shippingMethodsAvailable", function(t, i) {
        n.$broadcast("togglePanel", {
            noShippingMethods: i.shippingMethodsAvailable
        })
    }),
    n.$on("addressChanged", function(t, i) {
        n.$broadcast("prepareDefaultSelectedValuesForCustomAddressAttributes", {
            panel: i.panel,
            shipToSameAddress: i.shipToSameAddress
        })
    }),
    n.$on("shipToSameAddress", function(t, i) {
        i && angular.isDefined(i.shipToSameAddress) && n.$broadcast("togglePanel", {
            shipToSameAddress: i.shipToSameAddress
        });
        i && angular.isDefined(i.currentBillingAddress) && i.shipToSameAddress && n.$broadcast("updateShippingAddress", {
            address: angular.copy(i.currentBillingAddress)
        })
    }),
    n.$on("defaultAddressSelected", function(t, i) {
        function r() {
            n.$broadcast("resetPaymentMethodsData", {
                newCountryId: i.newBillingAddress.country.value
            });
            n.$broadcast("resetOrderTotalData")
        }
        function u() {
            n.$broadcast("resetShippingMethodsData", {
                newCountryId: i.newShippingAddress.country.value
            });
            n.$broadcast("resetOrderTotalData")
        }
        i && i.newBillingAddress ? l ? r() : h.push(r) : i && i.newShippingAddress && (a ? u() : c.push(u))
    }),
    n.$on("panelLoading", function() {
        u.push("panelLoading")
    }),
    n.$on("panelLoaded", function() {
        o()
    }),
    n.$on("configurationLoaded", function(t, i) {
        n.$broadcast("configurationReady", i);
        n.$broadcast("togglePanel", i)
    }),
    n.$on("billingContextChanging", function(n, i) {
        if (i) {
            var r = v(i)
              , f = y(i);
            i.initialLoad && u.push("billingContextChanging");
            (i.initialLoad || r) && e.push("billingContextChanging");
            (r || f) && t.raiseEvents(["setBillingAddressOverlay"]);
            f && t.raiseEvents(["setPaymentMethodsOverlay"]);
            r && t.raiseEvents(["setOrderTotalOverlay"])
        }
    }),
    n.$on("billingContextChanged", function(t, i) {
        if (i) {
            var r = v(i)
              , u = y(i);
            i.initialLoad && o();
            (i.initialLoad || r) && s("billingContextChanging");
            u && n.$broadcast("resetPaymentMethodsData");
            i.newVatNumber != undefined && n.$broadcast("resetOrderTotalData");
            f()
        }
    }),
    n.$on("shippingContextChanging", function(n, i) {
        if (i) {
            var f = d(i)
              , r = k(i);
            (i.initialLoad || r) && e.push("shippingContextChanging");
            i.initialLoad && u.push("shippingContextChanging");
            (f || r) && t.raiseEvents(["setShippingAddressOverlay"]);
            f && t.raiseEvents(["setShippingMethodsOverlay"]);
            r && t.raiseEvents(["setOrderTotalOverlay"])
        }
    }),
    n.$on("shippingContextChanged", function(t, i) {
        i && ((i.initialLoad || k(i)) && s("shippingContextChanging"),
        i.initialLoad && o(),
        d(i) && n.$broadcast("resetShippingMethodsData"),
        f())
    }),
    n.$on("paymentMethodsContextChanging", function(n, i) {
        (l = !1,
        i) && (i.initialLoad && u.push("paymentMethodsContextChanging"),
        (p(i) || w(i)) && (e.push("paymentMethodsContextChanging"),
        t.raiseEvents(["setOrderTotalOverlay"])),
        b(i) && t.raiseEvents(["setPaymentMethodsOverlay"]))
    }),
    n.$on("paymentMethodsContextChanged", function(t, i) {
        (l = !0,
        i) && (i.initialLoad && o(),
        (p(i) || w(i)) && (s("paymentMethodsContextChanging"),
        tt()),
        b(i) && n.$broadcast("resetPaymentMethodsData"),
        n.$broadcast("resetShippingMethodsData"),
        f())
    }),
    n.$on("shippingMethodsContextChanging", function(n, i) {
        (a = !1,
        i) && (i.initialLoad && u.push("shippingMethodsContextChanging"),
        g(i) && (e.push("shippingMethodsContextChanging"),
        t.raiseEvents(["setOrderTotalOverlay"])),
        t.raiseEvents(["setShippingMethodsOverlay"]))
    }),
    n.$on("shippingMethodsContextChanged", function(t, i) {
        (a = !0,
        i) && (i.initialLoad && o(),
        ut(i) && n.$broadcast("resetPaymentMethodsData"),
        g(i) && (s("shippingMethodsContextChanging"),
        it()),
        f())
    }),
    n.$on("orderSummaryContextChanging", function(n, i) {
        if (e.push("orderSummaryContextChanging"),
        i && i.initialLoad && (u.push("orderSummaryContextChanging"),
        t.raiseEvents(["setOrderSummaryOverlay"])),
        i && (i.updateCartItem || i.removeCartItem)) {
            var f = ["setOrderSummaryOverlay", "setPaymentMethodsOverlay", "setOrderTotalOverlay"];
            (r.ajaxUpdateShippingMethodsOnCartUpdate || i.removeCartItem) && f.push("setShippingMethodsOverlay");
            i.removeCartItem && f.push("setCheckoutAttributesOverlay");
            t.raiseEvents(f)
        }
    }),
    n.$on("orderSummaryContextChanged", function(t, i) {
        if (s("orderSummaryContextChanging"),
        i && i.initialLoad && o(),
        i && (i.updateCartItem || i.removeCartItem)) {
            n.$broadcast("resetOrderSummaryData");
            n.$broadcast("resetPaymentMethodsData");
            (r.ajaxUpdateShippingMethodsOnCartUpdate || i.removeCartItem) && n.$broadcast("resetShippingMethodsData");
            i.removeCartItem && n.$broadcast("resetCheckoutAttributesData");
            return
        }
        f()
    }),
    n.$on("orderTotalContextChanging", function(n, i) {
        i && i.initialLoad && (u.push("orderTotalContextChanging"),
        t.raiseEvents(["setOrderTotalOverlay"]))
    }),
    n.$on("orderTotalContextChanged", function(n, t) {
        t && t.initialLoad && o();
        f()
    }),
    n.$on("discountBoxContextChanging", function(n, i) {
        e.push("discountBoxContextChanging");
        i && i.initialLoad && u.push("discountBoxContextChanging");
        i && (i.applyDiscountCode || i.removeDiscountCode) && t.raiseEvents(["setDiscountBoxOverlay", "setOrderTotalOverlay"])
    }),
    n.$on("discountBoxContextChanged", function(i, r) {
        s("discountBoxContextChanging");
        r && r.initialLoad && o();
        r && (r.isDiscountApplied || r.isDiscountRemoved) && (t.raiseEvents(["setPaymentMethodsOverlay", "setShippingMethodsOverlay", "setOrderSummaryOverlay"]),
        n.$broadcast("resetPaymentMethodsData"),
        n.$broadcast("resetShippingMethodsData"),
        n.$broadcast("resetOrderSummaryData"));
        f()
    }),
    n.$on("giftCardBoxContextChanging", function(n, i) {
        e.push("giftCardBoxContextChanging");
        i && i.initialLoad && u.push("giftCardBoxContextChanging");
        i && (i.applyGiftCard || i.removeGiftCard) && t.raiseEvents(["setGiftCardBoxOverlay", "setOrderTotalOverlay"])
    }),
    n.$on("giftCardBoxContextChanged", function(i, r) {
        s("giftCardBoxContextChanging");
        r && r.initialLoad && o();
        r && (r.isGiftCardApplied || r.isGiftCardRemoved) && (t.raiseEvents(["setPaymentMethodsOverlay"]),
        n.$broadcast("resetPaymentMethodsData"));
        f()
    }),
    n.$on("removeGiftCard", function(t, i) {
        i.giftCardId && n.$broadcast("removeGiftCardById", {
            giftCardId: i.giftCardId
        })
    }),
    n.$on("estimateShippingContextChanging", function(n, i) {
        i && i.initialLoad && u.push("estimateShippingContextChanging");
        i && t.raiseEvents(["setEstimateShippingOverlay"])
    }),
    n.$on("estimateShippingContextChanged", function(n, t) {
        t && t.initialLoad && o();
        f()
    }),
    n.$on("checkoutAttributesContextChanging", function(n, i) {
        i && (i.initialLoad && u.push("checkoutAttributesContextChanging"),
        nt(i) && (e.push("checkoutAttributesContextChanging"),
        t.raiseEvents(["setOrderTotalOverlay"])),
        t.raiseEvents(["setCheckoutAttributesOverlay"]))
    }),
    n.$on("checkoutAttributesContextChanged", function(i, r) {
        if (r) {
            if (r.initialLoad && o(),
            rt(r) && (t.raiseEvents(["setPaymentMethodsOverlay"]),
            n.$broadcast("resetPaymentMethodsData")),
            nt(r)) {
                s("checkoutAttributesContextChanging");
                return
            }
            f()
        }
    }),
    n.$on("confirmOrderContextChanging", function() {
        t.raiseEvents(["setConfirmOrderOverlay"])
    }),
    n.$on("confirmOrderContextChanged", function() {
        n.$broadcast("hideConfirmOrderOverlay");
        f()
    }),
    n.$on("pickupInStoreContextChanging", function() {
        e.push("pickupInStoreContextChanging");
        t.raiseEvents(["setShippingAddressOverlay", "setShippingMethodsOverlay", "setOrderTotalOverlay", "resetPaymentMethodsData"])
    }),
    n.$on("pickupInStoreContextChanged", function(i, r) {
        s("pickupInStoreContextChanging");
        t.raiseEvents(["setPaymentMethodsOverlay", "resetPaymentMethodsData"]);
        n.$broadcast("togglePanel", {
            pickUpInStore: r.pickupInStore
        });
        f()
    }),
    n.$on("errorOccured", function(t, i) {
        i && n.$broadcast("pushError", i)
    }),
    n.$on("submitForm", function(t, i) {
        i && n.$broadcast("submit")
    }),
    {}
}
angular.module("realOnePageCheckout.dispatchers").factory("dataDispatcher", dataDispatcher);
dataDispatcher.$inject = ["$rootScope", "objectUtility", "namedQueueUtility"];
